---

# Create PostgreSQL users
- block:
  - name: PostgreSQL| users | make sure the user "{{ postgresql_superuser_username }}" are present, and password does not differ from the specified
    become: yes
    become_user: postgres
    postgresql_user:
      db: postgres
      name: "{{ postgresql_superuser_username }}"
      password: "{{ postgresql_superuser_password }}"
      encrypted: yes
      role_attr_flags: "SUPERUSER"
      login_unix_socket: "{{ postgresql_unix_socket_dir }}"
      port: "{{ postgresql_port }}"
      state: present

  - name: PostgreSQL | users | make sure the user "{{ postgresql_replication_username }}" are present, and password does not differ from the specified
    become: yes
    become_user: postgres
    postgresql_user:
      name: "{{ postgresql_replication_username }}"
      password: "{{ postgresql_replication_password }}"
      encrypted: yes
      role_attr_flags: "REPLICATION"
      login_unix_socket: "{{ postgresql_unix_socket_dir }}"
      port: "{{ postgresql_port }}"
      state: present

  - name: PostgreSQL | users | make sure the user "{{ postgresql_pgpool_username }}" are present, and password does not differ from the specified
    become: yes
    become_user: postgres
    postgresql_user:
      name: "{{ postgresql_pgpool_username }}"
      password: "{{ postgresql_pgpool_password }}"
      encrypted: yes
      role_attr_flags: "SUPERUSER"
      login_unix_socket: "{{ postgresql_unix_socket_dir }}"
      port: "{{ postgresql_port }}"
      state: present

  - name: PostgreSQL | users | make sure the PostgreSQL users are present
    become: yes
    become_user: postgres
    postgresql_user:
      name: "{{ item.name }}"
      password: "{{ item.password }}"
      encrypted: "yes"
      login_unix_socket: "{{ postgresql_unix_socket_dir }}"
      port: "{{ postgresql_port }}"
      state: present
    ignore_errors: yes
    loop: "{{ postgresql_users | flatten(1) }}"
    when: postgresql_users is defined and postgresql_users | length > 0

  when: is_master == "true"
  tags: [ postgresql, createuser ]