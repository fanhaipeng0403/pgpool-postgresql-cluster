---
# PostgreSQL variables
postgresql_version: "11"
# postgresql_data_dir: see vars/Debian.yml or vars/RedHat.yml
postgresql_listen_addresses: "*"
postgresql_port: "5432"
postgresql_encoding: "UTF8"       # for bootstrap only (initdb)
postgresql_locale: "en_US.UTF-8"  # for bootstrap only (initdb)
postgresql_data_checksums: 'true' # for bootstrap only (initdb)

#postgresql_superuser_username: "postgres"
#postgresql_superuser_password: "postgres"

#postgresql_replication_username: "repl"
#postgresql_replication_password: "repl"
postgresql_replication_database: "replication"

#postgresql_pgpool_username: "pgpool"
#postgresql_pgpool_password: "pgpool"

# (optional) list of users to be created (if not already exists)
postgresql_users: []
#  - { name: "mydb-user", password: "mydb-user-pass" }
#  - { name: "", password: "" }
#  - { name: "", password: "" }
#  - { name: "", password: "" }

# (optional) list of databases to be created (if not already exists)
postgresql_databases: []
#  - { db: "mydatabase", encoding: "UTF8", lc_collate: "zh_CN.UTF-8", lc_ctype: "zh_CN.UTF-8", owner: "mydb-user" }
#  - { db: "", encoding: "UTF8", lc_collate: "en_US.UTF-8", lc_ctype: "en_US.UTF-8", owner: "" }
#  - { db: "", encoding: "UTF8", lc_collate: "en_US.UTF-8", lc_ctype: "en_US.UTF-8", owner: "" }

# (optional) list of database extensions to be created (if not already exists)
postgresql_extensions:
  - { ext: "pgpool_recovery", db: "template1"   }
#  - { ext: "pg_stat_statements", db: "postgres"   }
#  - { ext: "pg_stat_statements", db: "mydatabase" }
#  - { ext: "pg_stat_statements", db: "" }
#  - { ext: "pg_stat_statements", db: "" }
#  - { ext: "pg_repack",          db: "" }  # postgresql-<version>-repack package is required
#  - { ext: "pg_stat_kcache",     db: "" }  # postgresql-<version>-pg-stat-kcache package is required
#  - { ext: "",     db: "" }
#  - { ext: "",     db: "" }
#  - { ext: "",     db: "" }

 # postgresql parameters to bootstrap dcs (are parameters for example)
postgresql_parameters:
  - { option: "max_connections",                     value: "100"     }
  - { option: "superuser_reserved_connections",      value: "5"       }
  - { option: "max_locks_per_transaction",           value: "64"      } # raise this value (ex. 512) if you have queries that touch many different tables (partitioning)
  - { option: "max_prepared_transactions",           value: "0"       }
  - { option: "huge_pages",                          value: "try"     } # or "on" if you set "vm_nr_hugepages" in kernel parameters
  - { option: "shared_buffers",                      value: "512MB"   } # please change this value
  - { option: "work_mem",                            value: "128MB"   } # please change this value
  - { option: "maintenance_work_mem",                value: "256MB"   } # please change this value
  - { option: "effective_cache_size",                value: "4GB"     } # please change this value
  - { option: "checkpoint_timeout",                  value: "15min"   }
  - { option: "checkpoint_completion_target",        value: "0.9"     }
  - { option: "min_wal_size",                        value: "2GB"     } # for PostgreSQL 9.5 and above (for 9.4 use "checkpoint_segments")
  - { option: "max_wal_size",                        value: "4GB"     } # for PostgreSQL 9.5 and above (for 9.4 use "checkpoint_segments")
  - { option: "wal_buffers",                         value: "32MB"    }
  - { option: "default_statistics_target",           value: "1000"    }
  - { option: "seq_page_cost",                       value: "1"       }
  - { option: "random_page_cost",                    value: "4"       } # "1.1" for SSD storage. Also, if your databases fits in shared_buffers
  - { option: "effective_io_concurrency",            value: "2"       } # "200" for SSD storage
  - { option: "synchronous_commit",                  value: "on"      } # or 'off' if you can you lose single transactions in case of a crash
  - { option: "autovacuum",                          value: "on"      } # never turn off the autovacuum!
  - { option: "autovacuum_max_workers",              value: "5"       }
  - { option: "autovacuum_vacuum_scale_factor",      value: "0.01"    }
  - { option: "autovacuum_analyze_scale_factor",     value: "0.02"    }
  - { option: "autovacuum_vacuum_cost_limit",        value: "200"     } # or 500/1000
  - { option: "autovacuum_vacuum_cost_delay",        value: "20"      }
  - { option: "autovacuum_naptime",                  value: "1s"      }
  - { option: "max_files_per_process",               value: "4096"    }
  - { option: "archive_mode",                        value: "on"      }
  - { option: "archive_timeout",                     value: "1800s"   }
  - { option: "archive_command",                     value: "'cd .'"    } # not doing anything yet with WAL-s
  - { option: "wal_level",                           value: "replica" } # "replica" for PostgreSQL 9.6 and above (for 9.4, 9.5 use "hot_standby")
  - { option: "wal_keep_segments",                   value: "130"     } # 
  - { option: "max_wal_senders",                     value: "10"      }
  - { option: "max_replication_slots",               value: "10"      }
  - { option: "hot_standby",                         value: "on"      }
  - { option: "wal_log_hints",                       value: "on"      }
  - { option: "shared_preload_libraries",            value: "'pg_stat_statements,auto_explain'" }
  - { option: "pg_stat_statements.max",              value: "10000"   }
  - { option: "pg_stat_statements.track",            value: "all"     }
  - { option: "pg_stat_statements.save",             value: "off"     }
  - { option: "auto_explain.log_min_duration",       value: "10s"     } # 10 sec (by default). Decrease this value if necessary
  - { option: "auto_explain.log_analyze",            value: "true"    }
  - { option: "auto_explain.log_buffers",            value: "true"    }
  - { option: "auto_explain.log_timing",             value: "false"   }
  - { option: "auto_explain.log_triggers",           value: "true"    }
  - { option: "auto_explain.log_verbose",            value: "true"    }
  - { option: "auto_explain.log_nested_statements",  value: "true"    }
  - { option: "track_io_timing",                     value: "on"      }
  - { option: "log_lock_waits",                      value: "on"      }
  - { option: "log_temp_files",                      value: "0"       }
  - { option: "track_activities",                    value: "on"      }
  - { option: "track_counts",                        value: "on"      }
  - { option: "track_functions",                     value: "all"     }
  - { option: "log_checkpoints",                     value: "on"      }
  - { option: "logging_collector",                   value: "on"      }
  - { option: "log_truncate_on_rotation",            value: "on"      }
  - { option: "log_rotation_age",                    value: "1d"      }
  - { option: "log_rotation_size",                   value: "0"       }
  - { option: "log_line_prefix",                     value: "'%t [%p-%l] %r %q%u@%d '" }
  - { option: "log_timezone",                     value: "{{ timezone }}" }
  
  - { option: "log_filename",                        value: "'postgresql-%a.log'"      }
  - { option: "log_directory",                       value: "'{{ postgresql_log_dir }}'" }
#  - { option: "idle_in_transaction_session_timeout", value: "600000"  } # for PostgreSQL 9.6 and above
#  - { option: "max_worker_processes",                value: "24"      }
#  - { option: "max_parallel_workers",                value: "12"      } # for PostgreSQL 10 and above
#  - { option: "max_parallel_workers_per_gather",     value: "4"       } # for PostgreSQL 9.6 and above
#  - { option: "max_parallel_maintenance_workers",    value: "2"       } # for PostgreSQL 11 and above
#  - { option: "hot_standby_feedback",                value: "on"      } # for "synchronous_mode"
#  - { option: "max_standby_streaming_delay",         value: "30s"     }
#  - { option: "wal_receiver_status_interval",        value: "10s"     }
#  - { option: "old_snapshot_threshold",              value: "60min"   } # for PostgreSQL 9.6 and above (1min-60d)
#  - { option: "",                                    value: ""        }
#  - { option: "",                                    value: ""        }


 # specify additional hosts that will be added to the pg_hba.conf
postgresql_pg_hba:
  - { type: "local", database: "all",       user: "postgres",  address: "",               method: "trust" } # "local=trust" required for ansible modules "postgresql_(user,db,ext)"
  - { type: "local", database: "all",       user: "all",       address: "",               method: "peer"  }
  - { type: "host",  database: "all",       user: "all",       address: "127.0.0.1/32",   method: "trust"   }
  - { type: "host",  database: "all",       user: "all",       address: "::1/128",        method: "trust"   }
  - { type: "host",  database: "all",       user: "all",       address: "0.0.0.0/0",        method: "md5"   }
#  - { type: "host", database: "all",        user: "all", address: "{{ pgpool_vip_addr }}", method: "md5"   }

